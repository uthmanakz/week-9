pipeline {
    agent any

    environment {
        AWS_ACCESS_KEY_ID = credentials ('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials ('AWS_SECRET_ACCESS_KEY')
    }
    stages {
        stage ('terraform init') {
            steps {
                sh '''
                cd dev
                terraform init
                '''
            }

        }

        stage ('terraform plan') {
            steps {
                sh '''
                cd dev
                terraform plan
                '''
            }

        }
        stage ('terraform apply') {
            steps {
                sh '''
                cd dev
                terraform apply -auto-approve
                '''
            }

        }




        stage ('SSH/Deploying NGINX') {
            steps {
                script {
                    sshagent (credentials : ['SSH_PRIVATE_KEY']) {
                        sh '''
                        cd dev
                        nginx_node=`terraform output | grep nginx | awk -F'"' '{print $2}'`
                        ssh -o StrictHostKeyChecking=no ec2-user@$nginx_node 'sudo yum install nginx -y' 
                        ssh -o StrictHostKeyChecking=no ec2-user@$nginx_node 'sudo service nginx start'
                        '''
                    }
                }
            }
        }

        stage ('SSH/Installing python') {
            steps {
                script {
                    sshagent (credentials : ['SSH_PRIVATE_KEY']) {
                        sh '''
                        cd dev
                        python_node=`terraform output | grep python | awk -F'"' '{print $2}'`
                        ssh -o StrictHostKeyChecking=no ec2-user@$python_node 'sudo yum install -y python3'
                        cd ../code
                        scp -o StrictHostKeyChecking=no hello.py ec2-user@$python_node:/tmp/
                        ssh -o StrictHostKeyChecking=no ec2-user@$python_node '/usr/bin/python3 /tmp/hello.py'
                        '''
                    }
                }
            }
        }
    }
}
    
